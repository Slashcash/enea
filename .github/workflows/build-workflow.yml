on:
  workflow_call:
    inputs:
      architecture:
        description: 'The architecture to build for'
        required: true
        type: string

      build_dependencies:
        description: 'Whether or not to build dependencies (they will be downloaded instead)'
        required: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Validate inputs
      run: |
        if [[ "${{ inputs.architecture }}" == "x86_64" ]]; then
          echo "ENEA_ARCH=x86_64" >> $GITHUB_ENV
          echo "ENEA_CONAN_ARCH=x86_64" >> $GITHUB_ENV
          echo "ENEA_LINUX_ARCH=x86_64" >> $GITHUB_ENV
          echo "ENEA_PKGCONFIG_ARCH=x86_64-linux-gnu" >> $GITHUB_ENV
          echo "ENEA_SKIP_TESTS=False" >> $GITHUB_ENV
          echo "Valid architecture: ${{ inputs.architecture }}"
        elif [[ "${{ inputs.architecture }}" == "aarch64" ]]; then
          echo "ENEA_ARCH=aarch64" >> $GITHUB_ENV
          echo "ENEA_CONAN_ARCH=armv8" >> $GITHUB_ENV
          echo "ENEA_LINUX_ARCH=arm64" >> $GITHUB_ENV
          echo "ENEA_PKGCONFIG_ARCH=aarch64-linux-gnu" >> $GITHUB_ENV
          echo "ENEA_SKIP_TESTS=True" >> $GITHUB_ENV
          echo "Valid architecture: ${{ inputs.architecture }}"
        elif [[ "${{ inputs.architecture }}" == "armv7hf" ]]; then
          echo "ENEA_ARCH=armv7hf" >> $GITHUB_ENV
          echo "ENEA_CONAN_ARCH=armv7hf" >> $GITHUB_ENV
          echo "ENEA_LINUX_ARCH=armhf" >> $GITHUB_ENV
          echo "ENEA_PKGCONFIG_ARCH=arm-linux-gnueabihf" >> $GITHUB_ENV
          echo "ENEA_SKIP_TESTS=True" >> $GITHUB_ENV
          echo "Valid architecture: ${{ inputs.architecture }}"
        else
          echo "Invalid architecture ${{ inputs.architecture }}. Choose 'x86_64', 'armv7hf' or 'aarch64'"
          exit 1
        fi

        if [[ "${{ inputs.build_dependencies }}" == "true" ]]; then
          echo "BUILD_DEPS=*" >> $GITHUB_ENV
        else
          echo "BUILD_DEPS=missing" >> $GITHUB_ENV
        fi

    - name: Add arm Ubuntu sources
      if: ${{ inputs.architecture != 'x86_64' }}
      uses: ryankurte/action-apt@master
      with:
        arch: ${{ env.ENEA_LINUX_ARCH }}

    - name: Install Conan
      uses: turtlebrowser/get-conan@main

    - name: Install custom Conan config
      run: conan config install conan

    - name: Build enea and run tests
      run: |
        source ${{ github.workspace }}/.env && \
          PKG_CONFIG_PATH="/usr/lib/${{ env.ENEA_PKGCONFIG_ARCH }}/pkgconfig" \
          conan create \
          -pr:h linux-${{ env.ENEA_ARCH }}-gcc-11.3-release \
          -pr:b linux-x86_64-gcc-11.3-host \
          --build "${{ env.BUILD_DEPS }}" -c tools.build:skip_test=${{ env.ENEA_SKIP_TESTS }} --name enea --version $SOFTWARE_VERSION ${{ github.workspace }}

    - name: Build advmame
      run: |
        source ${{ github.workspace }}/.env && \
          conan download -r enea --only-recipe advmame/$ADVMAME_VERSION && \
          PKG_CONFIG_PATH="/usr/lib/${{ env.ENEA_PKGCONFIG_ARCH }}/pkgconfig" \
          conan create \
          -pr:h linux-${{ env.ENEA_ARCH }}-gcc-11.3-release \
          -pr:b linux-x86_64-gcc-11.3-host \
          --build "${{ env.BUILD_DEPS }}" $(conan cache path advmame/$ADVMAME_VERSION)

    - name: Generate .AppImage
      run: |
        source ${{ github.workspace }}/.env && \
          ${{ github.workspace }}/scripts/generate_appimage.sh \
          -a ${{ env.ENEA_ARCH }} \
          -e $(conan cache path enea/$SOFTWARE_VERSION:$(conan list -p "arch=${{ env.ENEA_CONAN_ARCH }}" "enea/$SOFTWARE_VERSION:*" | grep -A1 packages | grep -v packages | sed 's/^ *//'))/bin/enea \
          -m $(conan cache path advmame/$ADVMAME_VERSION:$(conan list -p "arch=${{ env.ENEA_CONAN_ARCH }}" "advmame/$ADVMAME_VERSION:*" | grep -A1 packages | grep -v packages | sed 's/^ *//'))/bin/advmame

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Enea-${{ env.ENEA_ARCH }}.AppImage
        path: ${{ github.workspace }}/Enea-${{ env.ENEA_ARCH }}.AppImage
        if-no-files-found: error
