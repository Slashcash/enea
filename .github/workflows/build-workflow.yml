on:
  workflow_call:
    inputs:
      architecture:
        description: 'The architecture to build for'
        required: true
        type: string

      build_dependencies:
        description: 'Whether or not to build dependencies (they will be downloaded instead)'
        required: true
        type: boolean

      build_author:
        description: 'The author of the build'
        required: true
        type: string

      embed_update_info:
          description: 'Whether or not to embed update info into the AppImage'
          required: true
          type: boolean

      sign_artifacts:
          description: 'Whether or not to sign the AppImage'
          required: false
          default: false
          type: boolean

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

      # (needed due to this issue: https://github.com/actions/checkout/issues/1471)
      # We use the git tag to embed the version string into the executable
    - name: Fetch tags
      run: git fetch --prune --unshallow --tags

    - name: Import GPG key
      id: import_gpg
      if: ${{ inputs.sign_artifacts }}
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}

    - name: Validate inputs
      run: |
        if [[ "${{ inputs.architecture }}" == "x86_64" ]]; then
          echo "ENEA_ARCH=x86_64" >> $GITHUB_ENV
          echo "ENEA_CONAN_ARCH=x86_64" >> $GITHUB_ENV
          echo "ENEA_LINUX_ARCH=x86_64" >> $GITHUB_ENV
          echo "Valid architecture: ${{ inputs.architecture }}"
        elif [[ "${{ inputs.architecture }}" == "aarch64" ]]; then
          echo "ENEA_ARCH=aarch64" >> $GITHUB_ENV
          echo "ENEA_CONAN_ARCH=armv8" >> $GITHUB_ENV
          echo "ENEA_LINUX_ARCH=arm64" >> $GITHUB_ENV
          echo "Valid architecture: ${{ inputs.architecture }}"
        elif [[ "${{ inputs.architecture }}" == "armv7hf" ]]; then
          echo "ENEA_ARCH=armv7hf" >> $GITHUB_ENV
          echo "ENEA_CONAN_ARCH=armv7hf" >> $GITHUB_ENV
          echo "ENEA_LINUX_ARCH=armhf" >> $GITHUB_ENV
          echo "Valid architecture: ${{ inputs.architecture }}"
        else
          echo "Invalid architecture ${{ inputs.architecture }}. Choose 'x86_64', 'armv7hf' or 'aarch64'"
          exit 1
        fi

        if [[ "${{ inputs.build_dependencies }}" == "true" ]]; then
          echo "BUILD_DEPS=-b" >> $GITHUB_ENV
        else
          echo "BUILD_DEPS=" >> $GITHUB_ENV
        fi

        if [[ "${{ inputs.embed_update_info }}" == "true" ]]; then
          echo "UPDATE_INFO=-u" >> $GITHUB_ENV
        else
          echo "UPDATE_INFO=" >> $GITHUB_ENV
        fi

        if [[ "${{ inputs.sign_artifacts }}" == "true" ]]; then
          echo "SIGN_ARTIFACTS=-g ${{ steps.import_gpg.outputs.keyid }}" >> $GITHUB_ENV
        else
          echo "SIGN_ARTIFACTS=" >> $GITHUB_ENV
        fi

    - name: Add arm Ubuntu sources
      if: ${{ inputs.architecture != 'x86_64' }}
      uses: ryankurte/action-apt@master
      with:
        arch: ${{ env.ENEA_LINUX_ARCH }}

    - name: Install Conan
      uses: turtlebrowser/get-conan@main

    - name: Write build author
      run: echo "SOFTWARE_BUILDER=${{ inputs.build_author }}" >> .env

    - name: Generate .AppImage
      run: |
        ${{ github.workspace }}/scripts/generate_appimage.sh \
          -a ${{ env.ENEA_ARCH }} \
          ${{ env.BUILD_DEPS }} \
          ${{ env.UPDATE_INFO }} \
          ${{ env.SIGN_ARTIFACTS }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Enea-${{ env.ENEA_ARCH }}
        path: ${{ github.workspace }}/Enea-${{ env.ENEA_ARCH }}.AppImage*
        if-no-files-found: error
